# SPDX-FileCopyrightText: Stefan Bachhofner <bachhofner.dev@gmail.com>
#
# SPDX-License-Identifier: MIT


# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Unit Tests and Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  unit-tests:

    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8.18"]

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.4.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest and generate coverage report
      run: |
        pytest --cov .

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5.3.1
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}


  build:
    runs-on: ubuntu-24.04
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8.18"]

    needs: unit-tests

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Install dependencies
        run: |
            python -m pip install --upgrade build

      - name: Build package
        run: python -m build